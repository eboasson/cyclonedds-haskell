/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: x.h
  Source: x.idl
  Cyclone DDS: V0.8.0

*****************************************************************/
#ifndef DDSC_X_H
#define DDSC_X_H

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef struct OneULong
{
  uint32_t seq;
} OneULong;

extern const dds_topic_descriptor_t OneULong_desc;

#define OneULong__alloc() \
((OneULong*) dds_alloc (sizeof (OneULong)));

#define OneULong_free(d,o) \
dds_sample_free ((d), &OneULong_desc, (o))

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

typedef struct KeyedSeq
{
  uint32_t seq;
  uint32_t keyval;
  dds_sequence_octet baggage;
} KeyedSeq;

extern const dds_topic_descriptor_t KeyedSeq_desc;

#define KeyedSeq__alloc() \
((KeyedSeq*) dds_alloc (sizeof (KeyedSeq)));

#define KeyedSeq_free(d,o) \
dds_sample_free ((d), &KeyedSeq_desc, (o))

typedef struct fuzzymod_TypeA
{
  int16_t c[2];
  char * i;
} fuzzymod_TypeA;

extern const dds_topic_descriptor_t fuzzymod_TypeA_desc;

#define fuzzymod_TypeA__alloc() \
((fuzzymod_TypeA*) dds_alloc (sizeof (fuzzymod_TypeA)));

#define fuzzymod_TypeA_free(d,o) \
dds_sample_free ((d), &fuzzymod_TypeA_desc, (o))

typedef struct fuzzymod_TypeB
{
  int16_t c[2];
  char * i;
} fuzzymod_TypeB;

extern const dds_topic_descriptor_t fuzzymod_TypeB_desc;

#define fuzzymod_TypeB__alloc() \
((fuzzymod_TypeB*) dds_alloc (sizeof (fuzzymod_TypeB)));

#define fuzzymod_TypeB_free(d,o) \
dds_sample_free ((d), &fuzzymod_TypeB_desc, (o))

typedef struct fuzzymod_TypeC
{
  uint8_t c[2];
  char * i;
} fuzzymod_TypeC;

extern const dds_topic_descriptor_t fuzzymod_TypeC_desc;

#define fuzzymod_TypeC__alloc() \
((fuzzymod_TypeC*) dds_alloc (sizeof (fuzzymod_TypeC)));

#define fuzzymod_TypeC_free(d,o) \
dds_sample_free ((d), &fuzzymod_TypeC_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_X_H */
